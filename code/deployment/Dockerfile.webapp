# Multi-stage Dockerfile for Web Application
FROM python:3.11-slim as builder

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    git \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir --user -r requirements.txt

# Production stage
FROM python:3.11-slim

# Create non-root user
RUN groupadd -r ollama && useradd -r -g ollama ollama

# Set working directory
WORKDIR /app

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy Python packages from builder stage
COPY --from=builder /root/.local /root/.local

# Copy application code
COPY web_applications/ ./web_applications/
COPY chapter11_rest_api/ ./chapter11_rest_api/
COPY chapter15_rag_implementation/ ./chapter15_rag_implementation/
COPY .env.example .env

# Create necessary directories
RUN mkdir -p logs uploads && \
    chown -R ollama:ollama /app

# Switch to non-root user
USER ollama

# Make sure scripts in .local are usable:
ENV PATH=/root/.local/bin:$PATH

# Expose port
EXPOSE 5000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:5000/api/health || exit 1

# Start the web application
CMD ["python", "web_applications/chat_web_app.py"]
